{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u4f7f\u7528 PlaceholderAPI","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u3001\u7c7b\u578b\u5b89\u5168\u7684 C++ \u5360\u4f4d\u7b26\u63d2\u4ef6\uff0c\u4e13\u4e3a\u9700\u8981\u9ad8\u6027\u80fd\u548c\u9ad8\u6269\u5c55\u6027\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002</p>"},{"location":"#_1","title":"\u4e3b\u8981\u7279\u6027","text":"<ul> <li>\u7c7b\u578b\u5b89\u5168: \u5229\u7528 C++ \u6a21\u677f\u5728\u7f16\u8bd1\u671f\u68c0\u67e5\u7c7b\u578b\uff0c\u675c\u7edd\u8fd0\u884c\u65f6\u7c7b\u578b\u9519\u8bef\u3002</li> <li>\u9ad8\u6027\u80fd: \u5185\u7f6e LRU \u7f13\u5b58\u548c\u6a21\u677f\u7f16\u8bd1\u7cfb\u7edf\uff0c\u6700\u5927\u7a0b\u5ea6\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u5f00\u9500\u3002</li> <li>\u5f02\u6b65\u652f\u6301: \u652f\u6301\u5f02\u6b65\u5360\u4f4d\u7b26\uff0c\u907f\u514d\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u63d0\u5347\u54cd\u5e94\u901f\u5ea6\u3002</li> <li>\u5f3a\u5927\u7684\u683c\u5f0f\u5316: \u63d0\u4f9b\u4e30\u5bcc\u7684\u53c2\u6570\u5316\u683c\u5f0f\u9009\u9879\uff0c\u8f7b\u677e\u5b9e\u73b0\u590d\u6742\u7684\u6587\u672c\u6837\u5f0f\u3002</li> <li>\u7075\u6d3b\u7684\u4e0a\u4e0b\u6587: \u652f\u6301\u670d\u52a1\u5668\u7ea7\u3001\u7279\u5b9a\u5bf9\u8c61\u4ee5\u53ca\u5173\u7cfb\u578b\u5360\u4f4d\u7b26\u3002</li> <li>\u6613\u4e8e\u6269\u5c55: \u6e05\u6670\u7684 API \u8bbe\u8ba1\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u6ce8\u518c\u81ea\u5b9a\u4e49\u7c7b\u578b\u548c\u5360\u4f4d\u7b26\u3002</li> </ul>"},{"location":"#_2","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u8bf7\u6d4f\u89c8\u5de6\u4fa7\u7684 API \u53c2\u8003\u6587\u6863\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 <code>PlaceholderManager</code> \u6ce8\u518c\u548c\u89e3\u6790\u5360\u4f4d\u7b26\u3002</p>"},{"location":"api/placeholder-manager/","title":"<code>PlaceholderManager</code> API \u53c2\u8003","text":"<p><code>PlaceholderManager</code> \u662f PlaceholderAPI \u7684\u6838\u5fc3\u7ba1\u7406\u7c7b\uff0c\u8d1f\u8d23\u6ce8\u518c\u3001\u89e3\u6790\u548c\u66ff\u6362\u5360\u4f4d\u7b26\u3002\u5b83\u662f\u4e00\u4e2a\u5355\u4f8b\u7c7b\uff0c\u6574\u5408\u4e86\u7c7b\u578b\u7cfb\u7edf\u3001\u6ce8\u518c\u8868\u548c\u7f13\u5b58\u673a\u5236\uff0c\u63d0\u4f9b\u4e86\u540c\u6b65\u548c\u5f02\u6b65\u7684\u5360\u4f4d\u7b26\u5904\u7406\u80fd\u529b\u3002</p>"},{"location":"api/placeholder-manager/#_1","title":"\u83b7\u53d6\u5b9e\u4f8b","text":""},{"location":"api/placeholder-manager/#getinstance","title":"getInstance","text":"<p>\u83b7\u53d6 <code>PlaceholderManager</code> \u7684\u5355\u4f8b\u5b9e\u4f8b\u3002</p> <pre><code>static PlaceholderManager&amp; getInstance();\n</code></pre> <ul> <li>\u8fd4\u56de: <code>PlaceholderManager</code> \u7684\u5f15\u7528\u3002</li> </ul>"},{"location":"api/placeholder-manager/#_2","title":"\u5360\u4f4d\u7b26\u6ce8\u518c","text":"<p><code>PlaceholderManager</code> \u63d0\u4f9b\u4e86\u4e00\u5957\u4e30\u5bcc\u7684\u63a5\u53e3\u6765\u6ce8\u518c\u4e0d\u540c\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\u3002</p>"},{"location":"api/placeholder-manager/#registerserverplaceholder","title":"registerServerPlaceholder","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u670d\u52a1\u5668\u8303\u56f4\u7684\u5360\u4f4d\u7b26\uff08\u65e0\u53c2\u6570\uff09\u3002</p> <pre><code>void registerServerPlaceholder(\n    const std::string&amp;           pluginName,\n    const std::string&amp;           placeholder,\n    ServerReplacer               replacer,\n    std::optional&lt;CacheDuration&gt; cache_duration = std::nullopt,\n    CacheKeyStrategy             strategy       = CacheKeyStrategy::Default\n);\n</code></pre> <ul> <li>\u53c2\u6570:<ul> <li><code>pluginName</code>: \u63d2\u4ef6\u540d\u3002</li> <li><code>placeholder</code>: \u5360\u4f4d\u7b26\u6807\u8bc6\u7b26\u3002</li> <li><code>replacer</code>: \u66ff\u6362\u51fd\u6570\u3002</li> <li><code>cache_duration</code>: (\u53ef\u9009) \u7f13\u5b58\u6301\u7eed\u65f6\u95f4\u3002</li> <li><code>strategy</code>: (\u53ef\u9009) \u7f13\u5b58\u952e\u7b56\u7565\u3002</li> </ul> </li> </ul>"},{"location":"api/placeholder-manager/#registerserverplaceholderwithparams","title":"registerServerPlaceholderWithParams","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u670d\u52a1\u5668\u8303\u56f4\u5360\u4f4d\u7b26\u3002</p> <pre><code>void registerServerPlaceholderWithParams(\n    const std::string&amp;           pluginName,\n    const std::string&amp;           placeholder,\n    ServerReplacerWithParams&amp;&amp;   replacer,\n    std::optional&lt;CacheDuration&gt; cache_duration = std::nullopt,\n    CacheKeyStrategy             strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerasyncserverplaceholder","title":"registerAsyncServerPlaceholder","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5f02\u6b65\u7684\u670d\u52a1\u5668\u8303\u56f4\u5360\u4f4d\u7b26\uff08\u65e0\u53c2\u6570\uff09\u3002</p> <pre><code>void registerAsyncServerPlaceholder(\n    const std::string&amp;           pluginName,\n    const std::string&amp;           placeholder,\n    AsyncServerReplacer&amp;&amp;        replacer,\n    std::optional&lt;CacheDuration&gt; cache_duration = std::nullopt,\n    CacheKeyStrategy             strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerasyncserverplaceholderwithparams","title":"registerAsyncServerPlaceholderWithParams","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u5f02\u6b65\u670d\u52a1\u5668\u8303\u56f4\u5360\u4f4d\u7b26\u3002</p> <pre><code>void registerAsyncServerPlaceholderWithParams(\n    const std::string&amp;              pluginName,\n    const std::string&amp;              placeholder,\n    AsyncServerReplacerWithParams&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;    cache_duration = std::nullopt,\n    CacheKeyStrategy                strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerplaceholder","title":"registerPlaceholder","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\uff08\u65e0\u53c2\u6570\uff09\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid registerPlaceholder(\n    const std::string&amp;               pluginName,\n    const std::string&amp;               placeholder,\n    std::function&lt;std::string(T*)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;     cache_duration = std::nullopt,\n    CacheKeyStrategy                 strategy       = CacheKeyStrategy::Default\n);\n</code></pre> <ul> <li>\u6a21\u677f\u53c2\u6570:<ul> <li><code>T</code>: \u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u7c7b\u578b\u3002</li> </ul> </li> </ul>"},{"location":"api/placeholder-manager/#registerplaceholderwithparams","title":"registerPlaceholderWithParams","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5e26\u53c2\u6570\u5360\u4f4d\u7b26\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid registerPlaceholderWithParams(\n    const std::string&amp;                                           pluginName,\n    const std::string&amp;                                           placeholder,\n    std::function&lt;std::string(T*, const Utils::ParsedParams&amp;)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;                                 cache_duration = std::nullopt,\n    CacheKeyStrategy                                             strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerasyncplaceholder","title":"registerAsyncPlaceholder","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5f02\u6b65\u5360\u4f4d\u7b26\uff08\u65e0\u53c2\u6570\uff09\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid registerAsyncPlaceholder(\n    const std::string&amp;                            pluginName,\n    const std::string&amp;                            placeholder,\n    std::function&lt;std::future&lt;std::string&gt;(T*)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;                  cache_duration = std::nullopt,\n    CacheKeyStrategy                              strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerasyncplaceholderwithparams","title":"registerAsyncPlaceholderWithParams","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5e26\u53c2\u6570\u5f02\u6b65\u5360\u4f4d\u7b26\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid registerAsyncPlaceholderWithParams(\n    const std::string&amp;                                                        pluginName,\n    const std::string&amp;                                                        placeholder,\n    std::function&lt;std::future&lt;std::string&gt;(T*, const Utils::ParsedParams&amp;)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;                                              cache_duration = std::nullopt,\n    CacheKeyStrategy                                                          strategy = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#registerrelationalplaceholder","title":"registerRelationalPlaceholder","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5173\u7cfb\u578b\u5360\u4f4d\u7b26\uff08\u9700\u8981\u4e24\u4e2a\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff09\u3002</p> <pre><code>template &lt;typename T, typename T_Rel&gt;\nvoid registerRelationalPlaceholder(\n    const std::string&amp;                       pluginName,\n    const std::string&amp;                       placeholder,\n    std::function&lt;std::string(T*, T_Rel*)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;             cache_duration = std::nullopt,\n    CacheKeyStrategy                         strategy       = CacheKeyStrategy::Default\n);\n</code></pre> <ul> <li>\u6a21\u677f\u53c2\u6570:<ul> <li><code>T</code>: \u4e3b\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u7c7b\u578b\u3002</li> <li><code>T_Rel</code>: \u5173\u7cfb\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u7c7b\u578b\u3002</li> </ul> </li> </ul>"},{"location":"api/placeholder-manager/#registerrelationalplaceholderwithparams","title":"registerRelationalPlaceholderWithParams","text":"<p>\u6ce8\u518c\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u5173\u7cfb\u578b\u5360\u4f4d\u7b26\u3002</p> <pre><code>template &lt;typename T, typename T_Rel&gt;\nvoid registerRelationalPlaceholderWithParams(\n    const std::string&amp;                                                   pluginName,\n    const std::string&amp;                                                   placeholder,\n    std::function&lt;std::string(T*, T_Rel*, const Utils::ParsedParams&amp;)&gt;&amp;&amp; replacer,\n    std::optional&lt;CacheDuration&gt;                                         cache_duration = std::nullopt,\n    CacheKeyStrategy                                                     strategy       = CacheKeyStrategy::Default\n);\n</code></pre>"},{"location":"api/placeholder-manager/#_3","title":"\u5360\u4f4d\u7b26\u66ff\u6362","text":""},{"location":"api/placeholder-manager/#replaceplaceholders","title":"replacePlaceholders","text":"<p>\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u5360\u4f4d\u7b26\u3002\u63d0\u4f9b\u591a\u4e2a\u91cd\u8f7d\u7248\u672c\u4ee5\u9002\u5e94\u4e0d\u540c\u4e0a\u4e0b\u6587\u3002</p> <pre><code>// \u670d\u52a1\u5668\u5360\u4f4d\u7b26\nstd::string replacePlaceholders(const std::string&amp; text);\n\n// \u4f7f\u7528 Player* \u4e0a\u4e0b\u6587\nstd::string replacePlaceholders(const std::string&amp; text, Player* player);\n\n// \u4f7f\u7528\u901a\u7528 PlaceholderContext\nstd::string replacePlaceholders(const std::string&amp; text, const PlaceholderContext&amp; ctx);\n\n// \u4f7f\u7528\u6a21\u677f\u5316\u4e0a\u4e0b\u6587\u5bf9\u8c61\ntemplate &lt;typename T&gt;\nstd::string replacePlaceholders(const std::string&amp; text, T* obj);\n</code></pre>"},{"location":"api/placeholder-manager/#compiletemplate","title":"compileTemplate","text":"<p>\u5c06\u5b57\u7b26\u4e32\u7f16\u8bd1\u6210\u6a21\u677f\u4ee5\u63d0\u9ad8\u91cd\u590d\u66ff\u6362\u7684\u6548\u7387\u3002</p> <pre><code>CompiledTemplate compileTemplate(const std::string&amp; text);\n</code></pre> <ul> <li>\u8fd4\u56de: \u7f16\u8bd1\u540e\u7684 <code>CompiledTemplate</code> \u5bf9\u8c61\u3002</li> </ul>"},{"location":"api/placeholder-manager/#replaceplaceholders-with-compiledtemplate","title":"replacePlaceholders (with CompiledTemplate)","text":"<p>\u4f7f\u7528\u7f16\u8bd1\u540e\u7684\u6a21\u677f\u548c\u4e0a\u4e0b\u6587\u8fdb\u884c\u66ff\u6362\uff0c\u6548\u7387\u66f4\u9ad8\u3002</p> <pre><code>std::string replacePlaceholders(const CompiledTemplate&amp; tpl, const PlaceholderContext&amp; ctx);\n</code></pre>"},{"location":"api/placeholder-manager/#replaceplaceholdersasync","title":"replacePlaceholdersAsync","text":"<p>\u5f02\u6b65\u66ff\u6362\u5360\u4f4d\u7b26\u3002</p> <pre><code>std::future&lt;std::string&gt; replacePlaceholdersAsync(const std::string&amp; text, const PlaceholderContext&amp; ctx);\n\nstd::future&lt;std::string&gt; replacePlaceholdersAsync(const CompiledTemplate&amp; tpl, const PlaceholderContext&amp; ctx);\n</code></pre> <ul> <li>\u8fd4\u56de: \u4e00\u4e2a\u6301\u6709\u6700\u7ec8\u7ed3\u679c\u7684 <code>std::future&lt;std::string&gt;</code>\u3002</li> </ul>"},{"location":"api/placeholder-manager/#_4","title":"\u7c7b\u578b\u7cfb\u7edf","text":""},{"location":"api/placeholder-manager/#registerinheritance","title":"registerInheritance","text":"<p>\u6ce8\u518c\u7c7b\u578b\u7ee7\u627f\u5173\u7cfb\uff0c\u5141\u8bb8\u6d3e\u751f\u7c7b\u4f7f\u7528\u57fa\u7c7b\u7684\u5360\u4f4d\u7b26\u3002</p> <pre><code>template &lt;typename Derived, typename Base&gt;\nvoid registerInheritance();\n</code></pre> <ul> <li>\u6a21\u677f\u53c2\u6570:<ul> <li><code>Derived</code>: \u6d3e\u751f\u7c7b\u3002</li> <li><code>Base</code>: \u57fa\u7c7b\u3002</li> </ul> </li> </ul>"},{"location":"api/placeholder-manager/#registertypealias","title":"registerTypeAlias","text":"<p>\u4e3a\u4e00\u4e2a\u7c7b\u578b\u6ce8\u518c\u522b\u540d\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid registerTypeAlias(const std::string&amp; alias);\n</code></pre>"},{"location":"api/placeholder-manager/#_5","title":"\u5176\u4ed6\u63a5\u53e3","text":""},{"location":"api/placeholder-manager/#clearcache","title":"clearCache","text":"<p>\u6e05\u7406\u5360\u4f4d\u7b26\u7684\u5168\u5c40\u7f13\u5b58\u3002</p> <pre><code>// \u6e05\u7406\u6240\u6709\u7f13\u5b58\nvoid clearCache();\n\n// \u6e05\u7406\u7279\u5b9a\u63d2\u4ef6\u7684\u7f13\u5b58\nvoid clearCache(const std::string&amp; pluginName);\n</code></pre>"},{"location":"api/placeholder-manager/#getallplaceholders","title":"getAllPlaceholders","text":"<p>\u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u7684\u5360\u4f4d\u7b26\u4fe1\u606f\u3002</p> <pre><code>AllPlaceholders getAllPlaceholders() const;\n</code></pre> <ul> <li>\u8fd4\u56de: \u5305\u542b\u6240\u6709\u5360\u4f4d\u7b26\u4fe1\u606f\u7684 <code>AllPlaceholders</code> \u7ed3\u6784\u4f53\u3002</li> </ul>"},{"location":"api/placeholder-manager/#hasplaceholder","title":"hasPlaceholder","text":"<p>\u68c0\u67e5\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u5360\u4f4d\u7b26\u3002</p> <p>```cpp bool hasPlaceholder(     const std::string&amp;                pluginName,     const std::string&amp;                placeholderName,     const std::optional&amp; typeKey = std::nullopt ) const;"},{"location":"api/placeholder-registry/","title":"<code>PlaceholderRegistry</code> API \u53c2\u8003","text":"<p><code>PlaceholderRegistry</code> \u8d1f\u8d23\u5b58\u50a8\u548c\u7ba1\u7406\u6240\u6709\u5df2\u6ce8\u518c\u7684\u5360\u4f4d\u7b26\u3002\u5b83\u88ab <code>PlaceholderManager</code> \u5185\u90e8\u4f7f\u7528\uff0c\u4f46\u4e86\u89e3\u5176\u7ed3\u6784\u6709\u52a9\u4e8e\u6df1\u5165\u7406\u89e3 API \u7684\u5de5\u4f5c\u539f\u7406\u3002</p>"},{"location":"api/placeholder-registry/#_1","title":"\u6838\u5fc3\u6982\u5ff5","text":""},{"location":"api/placeholder-registry/#placeholdercategory","title":"PlaceholderCategory","text":"<p>\u5360\u4f4d\u7b26\u7684\u5206\u7c7b\u679a\u4e3e\u3002</p> <pre><code>enum class PlaceholderCategory {\n    Server,      // \u670d\u52a1\u5668\u7ea7\u522b\n    Context,     // \u4e0a\u4e0b\u6587\u76f8\u5173\n    Relational,  // \u5173\u7cfb\u578b\n    List,        // \u5217\u8868\n    ObjectList,  // \u5bf9\u8c61\u5217\u8868\n};\n</code></pre>"},{"location":"api/placeholder-registry/#cachekeystrategy","title":"CacheKeyStrategy","text":"<p>\u7f13\u5b58\u952e\u7684\u751f\u6210\u7b56\u7565\u3002</p> <pre><code>enum class CacheKeyStrategy {\n    Default,    // \u9ed8\u8ba4\u7b56\u7565\uff0c\u5305\u542b\u4e0a\u4e0b\u6587\u4fe1\u606f\n    ServerOnly, // \u4ec5\u670d\u52a1\u5668\u7ea7\u522b\uff0c\u4e0d\u5305\u542b\u4e0a\u4e0b\u6587\n};\n</code></pre>"},{"location":"api/placeholder-registry/#placeholderinfo","title":"PlaceholderInfo","text":"<p>\u7528\u4e8e\u67e5\u8be2\u7684\u5360\u4f4d\u7b26\u4fe1\u606f\u7ed3\u6784\u4f53\u3002</p> <pre><code>struct PlaceholderInfo {\n    std::string              name;           // \u5360\u4f4d\u7b26\u540d\u79f0\n    PlaceholderCategory      category;       // \u5206\u7c7b\n    bool                     isAsync{false}; // \u662f\u5426\u5f02\u6b65\n    std::string              targetType;     // \u76ee\u6807\u7c7b\u578b\u540d\n    std::string              relationalType; // \u5173\u7cfb\u7c7b\u578b\u540d\n    std::vector&lt;std::string&gt; overloads;      // \u91cd\u8f7d\u7c7b\u578b\u5217\u8868\n};\n</code></pre>"},{"location":"api/placeholder-registry/#_2","title":"\u4e3b\u8981\u63a5\u53e3","text":""},{"location":"api/placeholder-registry/#findbestreplacer","title":"findBestReplacer","text":"<p>\u5728 <code>PlaceholderManager</code> \u5185\u90e8\uff0c\u6b64\u51fd\u6570\u7528\u4e8e\u6839\u636e\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u67e5\u627e\u6700\u5339\u914d\u7684\u5360\u4f4d\u7b26\u66ff\u6362\u51fd\u6570\u3002\u5b83\u4f1a\u8003\u8651\u7c7b\u578b\u7ee7\u627f\u5173\u7cfb\uff0c\u627e\u5230\u6700\u4f18\u7684\u91cd\u8f7d\u7248\u672c\u3002</p> <pre><code>ReplacerMatch findBestReplacer(\n    std::string_view pluginName,\n    std::string_view placeholderName,\n    const PlaceholderContext&amp; ctx\n);\n</code></pre> <ul> <li>\u53c2\u6570:<ul> <li><code>pluginName</code>: \u63d2\u4ef6\u540d\u3002</li> <li><code>placeholderName</code>: \u5360\u4f4d\u7b26\u540d\u3002</li> <li><code>ctx</code>: \u5f53\u524d\u7684\u5360\u4f4d\u7b26\u4e0a\u4e0b\u6587\u3002</li> </ul> </li> <li>\u8fd4\u56de: \u4e00\u4e2a <code>ReplacerMatch</code> \u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e86\u5339\u914d\u5230\u7684\u66ff\u6362\u51fd\u6570\u53ca\u5176\u76f8\u5173\u4fe1\u606f\u3002</li> </ul>"},{"location":"api/placeholder-registry/#getallplaceholders","title":"getAllPlaceholders","text":"<p>\u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u5360\u4f4d\u7b26\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</p> <pre><code>AllPlaceholders getAllPlaceholders() const;\n</code></pre> <ul> <li>\u8fd4\u56de: \u4e00\u4e2a <code>AllPlaceholders</code> \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u4ece\u63d2\u4ef6\u540d\u5230 <code>PlaceholderInfo</code> \u5411\u91cf\u7684\u6620\u5c04\u3002</li> </ul>"},{"location":"api/placeholder-registry/#hasplaceholder","title":"hasPlaceholder","text":"<p>\u68c0\u67e5\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u5360\u4f4d\u7b26\u3002</p> <pre><code>bool hasPlaceholder(\n    const std::string&amp; pluginName,\n    const std::string&amp; placeholderName,\n    const std::optional&lt;std::string&gt;&amp; typeKey = std::nullopt\n) const;\n</code></pre> <ul> <li>\u53c2\u6570:<ul> <li><code>pluginName</code>: \u63d2\u4ef6\u540d\u3002</li> <li><code>placeholderName</code>: \u5360\u4f4d\u7b26\u540d\u3002</li> <li><code>typeKey</code>: (\u53ef\u9009) \u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u7c7b\u578b\u952e\u3002\u5982\u679c\u63d0\u4f9b\uff0c\u5c06\u68c0\u67e5\u662f\u5426\u5b58\u5728\u9488\u5bf9\u8be5\u7279\u5b9a\u7c7b\u578b\u7684\u91cd\u8f7d\u3002</li> </ul> </li> </ul>"},{"location":"api/placeholder-registry/#_3","title":"\u6ce8\u518c\u63a5\u53e3","text":"<p><code>PlaceholderRegistry</code> \u5305\u542b\u4e00\u7cfb\u5217 <code>register...</code> \u51fd\u6570\uff0c\u4e0e <code>PlaceholderManager</code> \u4e2d\u7684\u516c\u5f00\u63a5\u53e3\u76f8\u5bf9\u5e94\u3002\u8fd9\u4e9b\u51fd\u6570\u8d1f\u8d23\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\u5b58\u50a8\u5728\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u8005\u5e94\u901a\u8fc7 <code>PlaceholderManager</code> \u800c\u4e0d\u662f\u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002</p>"},{"location":"api/utils/","title":"<code>Utils</code> API \u53c2\u8003","text":"<p><code>PA::Utils</code> \u547d\u540d\u7a7a\u95f4\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7684\u5de5\u5177\u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u6790\u5360\u4f4d\u7b26\u53c2\u6570\u548c\u5bf9\u8f93\u51fa\u7ed3\u679c\u8fdb\u884c\u9ad8\u7ea7\u683c\u5f0f\u5316\u3002</p>"},{"location":"api/utils/#_1","title":"\u53c2\u6570\u89e3\u6790","text":""},{"location":"api/utils/#parsedparams","title":"ParsedParams","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6838\u5fc3\u7c7b\uff0c\u7528\u4e8e\u89e3\u6790\u5360\u4f4d\u7b26\u4e2d\u7684\u53c2\u6570\u5b57\u7b26\u4e32\uff08\u4f8b\u5982 <code>%player_name:prefix=Mr.;color=red%</code> \u4e2d\u7684 <code>prefix=Mr.;color=red</code>\uff09\u3002\u5b83\u652f\u6301\u952e\u503c\u5bf9\u3001\u7c7b\u578b\u5316\u8bbf\u95ee\u548c\u7f13\u5b58\uff0c\u6027\u80fd\u5f88\u9ad8\u3002</p>"},{"location":"api/utils/#_2","title":"\u6784\u9020\u51fd\u6570","text":"<pre><code>ParsedParams(\n    std::string_view paramStr,\n    std::string_view kvsep = \"=\",\n    std::string_view pairsep = \";\"\n);\n</code></pre> <ul> <li>\u53c2\u6570:<ul> <li><code>paramStr</code>: \u8981\u89e3\u6790\u7684\u539f\u59cb\u53c2\u6570\u5b57\u7b26\u4e32\u3002</li> <li><code>kvsep</code>: (\u53ef\u9009) \u952e\u548c\u503c\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a <code>=</code>\u3002</li> <li><code>pairsep</code>: (\u53ef\u9009) \u952e\u503c\u5bf9\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u4e3a <code>;</code>\u3002</li> </ul> </li> </ul>"},{"location":"api/utils/#_3","title":"\u83b7\u53d6\u53c2\u6570\u503c","text":"<pre><code>// \u83b7\u53d6\u539f\u59cb\u5b57\u7b26\u4e32\u503c\nstd::optional&lt;std::string_view&gt; get(const std::string&amp; key) const;\n\n// \u83b7\u53d6\u5e76\u89e3\u6790\u4e3a\u5e03\u5c14\u503c (\u652f\u6301 \"true\", \"yes\", \"1\", \"on\" \u7b49)\nstd::optional&lt;bool&gt; getBool(const std::string&amp; key) const;\n\n// \u83b7\u53d6\u5e76\u89e3\u6790\u4e3a\u6574\u6570\nstd::optional&lt;int&gt; getInt(const std::string&amp; key) const;\n\n// \u83b7\u53d6\u5e76\u89e3\u6790\u4e3a\u6d6e\u70b9\u6570\nstd::optional&lt;double&gt; getDouble(const std::string&amp; key) const;\n\n// \u68c0\u67e5\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u952e\nbool has(const std::string&amp; key) const;\n</code></pre>"},{"location":"api/utils/#_4","title":"\u6587\u672c\u683c\u5f0f\u5316","text":""},{"location":"api/utils/#applyformatting","title":"applyFormatting","text":"<p>\u8fd9\u662f\u683c\u5f0f\u5316\u529f\u80fd\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u3002\u5b83\u63a5\u6536\u4e00\u4e2a\u539f\u59cb\u5b57\u7b26\u4e32\u503c\u548c <code>ParsedParams</code> \u5bf9\u8c61\uff0c\u7136\u540e\u6839\u636e\u53c2\u6570\u5e94\u7528\u4e00\u7cfb\u5217\u683c\u5f0f\u5316\u89c4\u5219\u3002</p> <pre><code>std::string applyFormatting(\n    const std::string&amp; rawValue,\n    const ParsedParams&amp; params\n);\n</code></pre>"},{"location":"api/utils/#_5","title":"\u652f\u6301\u7684\u683c\u5f0f\u5316\u53c2\u6570","text":"<p><code>applyFormatting</code> \u51fd\u6570\u652f\u6301\u901a\u8fc7 <code>ParsedParams</code> \u4f20\u5165\u591a\u79cd\u53c2\u6570\u6765\u63a7\u5236\u8f93\u51fa\u683c\u5f0f\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\uff1a</p> <ul> <li> <p>\u6761\u4ef6\u683c\u5f0f\u5316:</p> <ul> <li><code>cond</code>: \u6570\u503c\u6761\u4ef6 (\u4f8b\u5982 <code>\"&gt;10\"</code>, <code>\"[0-100]\"</code>).</li> <li><code>equals</code>: \u5b57\u7b26\u4e32\u7cbe\u786e\u5339\u914d\u3002</li> <li><code>ci</code>: (\u5e03\u5c14) \u4e0e <code>equals</code> \u914d\u5408\u4f7f\u7528\uff0c\u8fdb\u884c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u6bd4\u8f83\u3002</li> <li><code>then</code>: \u6761\u4ef6\u6ee1\u8db3\u65f6\u7684\u8f93\u51fa\u6587\u672c\u3002</li> <li><code>else</code>: \u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u7684\u8f93\u51fa\u6587\u672c\u3002</li> </ul> </li> <li> <p>\u6570\u5b57\u683c\u5f0f\u5316:</p> <ul> <li><code>math</code>: \u5e94\u7528\u4e00\u4e2a\u6570\u5b66\u8868\u8fbe\u5f0f (\u4f8b\u5982 <code>\"_*2+10\"</code>\uff0c<code>_</code> \u4ee3\u8868\u539f\u59cb\u6570\u503c)\u3002</li> <li><code>decimals</code>: \u5c0f\u6570\u4f4d\u6570\u3002</li> <li><code>round</code>: (\u5e03\u5c14) \u662f\u5426\u56db\u820d\u4e94\u5165\u3002</li> <li><code>commas</code>: (\u5e03\u5c14) \u662f\u5426\u6dfb\u52a0\u5343\u5206\u4f4d\u5206\u9694\u7b26\u3002</li> <li><code>si</code>: (\u5e03\u5c14) \u662f\u5426\u4f7f\u7528 SI \u5355\u4f4d\u7f29\u5199 (K, M, G)\u3002</li> <li><code>unit</code>: \u4e0e <code>si</code> \u914d\u5408\u4f7f\u7528\uff0c\u6307\u5b9a\u5355\u4f4d (\u4f8b\u5982 \"B\" \u8868\u793a\u5b57\u8282)\u3002</li> <li><code>thresholds</code>: \u57fa\u4e8e\u6570\u503c\u9608\u503c\u5e94\u7528\u4e0d\u540c\u6837\u5f0f\u6216\u6587\u672c (\u4f8b\u5982 <code>\"&gt;10:red,&lt;=10:green\"</code>).</li> </ul> </li> <li> <p>\u5b57\u7b26\u4e32\u64cd\u4f5c:</p> <ul> <li><code>prefix</code>/<code>suffix</code>: \u6dfb\u52a0\u524d\u7f00/\u540e\u7f00\u3002</li> <li><code>color</code>/<code>style</code>: \u5e94\u7528\u989c\u8272\u548c\u6837\u5f0f (\u4f8b\u5982 <code>\"red+bold\"</code>).</li> <li><code>case</code>: \u5927\u5c0f\u5199\u8f6c\u6362 (<code>upper</code>, <code>lower</code>, <code>title</code>).</li> <li><code>repl</code>: \u5b57\u7b26\u4e32\u66ff\u6362 (\u4f8b\u5982 <code>\"foo-&gt;bar,baz-&gt;qux\"</code>).</li> <li><code>map</code>/<code>mapci</code>/<code>mapre</code>: \u5c06\u8f93\u5165\u503c\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u503c\u3002</li> <li><code>maxlen</code>: \u622a\u65ad\u5b57\u7b26\u4e32\u5230\u6307\u5b9a\u53ef\u89c1\u957f\u5ea6\u3002</li> <li><code>ellipsis</code>: \u622a\u65ad\u65f6\u4f7f\u7528\u7684\u7701\u7565\u53f7\u3002</li> <li><code>align</code>/<code>width</code>/<code>fill</code>: \u5bf9\u9f50\u3001\u586b\u5145\u548c\u8bbe\u7f6e\u5bbd\u5ea6\u3002</li> </ul> </li> <li> <p>\u5176\u4ed6:</p> <ul> <li><code>emptytext</code>: \u5f53\u539f\u59cb\u503c\u4e3a\u7a7a\u65f6\u663e\u793a\u7684\u6587\u672c\u3002</li> <li><code>json</code>: \u5c06\u5b57\u7b26\u4e32\u8f6c\u4e49\u4e3a JSON \u517c\u5bb9\u683c\u5f0f\u3002</li> <li><code>stripcodes</code>: \u79fb\u9664\u6240\u6709\u989c\u8272/\u6837\u5f0f\u4ee3\u7801\u3002</li> <li><code>lua</code>: \u4f7f\u7528 Lua \u811a\u672c\u8fdb\u884c\u9ad8\u7ea7\u5904\u7406\u3002</li> </ul> </li> </ul>"},{"location":"api/utils/#_6","title":"\u793a\u4f8b","text":"<p>\u5047\u8bbe\u6709\u4e00\u4e2a\u5360\u4f4d\u7b26 <code>%server_tps%</code> \u8fd4\u56de <code>19.8765</code>\u3002</p> <ul> <li><code>params</code>: <code>decimals=1;commas=true</code></li> <li>\u8f93\u51fa: <code>\"19.9\"</code></li> <li><code>params</code>: <code>thresholds=&gt;18:\u00a7a,&gt;15:\u00a7e,&lt;=15:\u00a7c</code></li> <li>\u8f93\u51fa: <code>\"\u00a7a19.8765\"</code></li> <li><code>params</code>: <code>math=round(_);prefix=[;suffix=]</code></li> <li>\u8f93\u51fa: <code>\"[20]\"</code></li> </ul>"}]}